# Source: authentik/templates/server/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: authentik-server
  namespace: "authentik-dev"
  labels:
    helm.sh/chart: "authentik-2024.4.2"
    app.kubernetes.io/name: "authentik"
    app.kubernetes.io/instance: "authentik"
    app.kubernetes.io/component: "server"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/part-of: "authentik"
    app.kubernetes.io/version: "2024.4.2"
  annotations:
    cert-manager.io/issuer: authentik-letsencrypt-dev
    nginx.org/websocket-services: "authentik-server"
    nginx.ingress.kubernetes.io/server-snippet: |
      # Upstream where your authentik server is hosted.
      upstream authentik {
          server authentik-dev.diagon.cloud:9443;
          # Improve performance by keeping some connections alive.
          keepalive 10;
      }

      # Upgrade WebSocket if requested, otherwise use keepalive
      map $http_upgrade $connection_upgrade_keepalive {
          default upgrade;
          ''      '';
      }

      server {
          # HTTP server config
          listen 80;
          listen [::]:80;
          server_name sso.authentik-dev.diagon.cloud;
          # 301 redirect to HTTPS
          return 301 https://$host$request_uri;
      }
      server {
          # HTTPS server config
          listen 443 ssl http2;
          listen [::]:443 ssl http2;
          server_name sso.authentik-dev.diagon.cloud;

          # TLS certificates
          ssl_certificate /etc/letsencrypt/live/domain.tld/fullchain.pem;
          ssl_certificate_key /etc/letsencrypt/live/domain.tld/privkey.pem;
          add_header Strict-Transport-Security "max-age=63072000" always;

          # Proxy site
          location / {
              proxy_pass https://authentik;
              proxy_http_version 1.1;
              proxy_set_header X-Forwarded-Proto $scheme;
              proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
              proxy_set_header Host $http_host;
              proxy_set_header Upgrade $http_upgrade;
              proxy_set_header Connection $connection_upgrade_keepalive;
          }
      }
      }            
spec:
  ingressClassName: nginx
  rules:
  - host: authentik-dev.diagon.cloud
    http:
      paths:
        - path: /
          pathType: Prefix
          backend:
            service:
              name: authentik-server
              port:
                number: 80
  tls:
  - hosts:
    - authentik-dev.diagon.cloud
    secretName: authentik-tls
